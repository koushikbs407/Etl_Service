name: Node.js CI

on:
  push:
    branches: [main, Adaptive-Rate-Limiting]
  pull_request:
    branches: [main, Adaptive-Rate-Limiting]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Lint code (does not fail workflow)
      - name: Lint code
        run: npm run lint || echo "⚠️ ESLint warnings found"

      # Step 5: Run tests
      - name: Run tests
        run: npm test

      # Step 6: Run rate limiting tests
      - name: Run rate limiting tests
        run: |
          npm run test:rate-limiting || echo "⚠️ Some rate-limiting tests failed"

      # Step 7: Upload test reports
      - name: Upload test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports
          path: |
            rate-limiting-test-report.json
            rate-limiting-test-report.txt
          retention-days: 30

      # Step 8: Comment test results on PR
      - name: Comment test results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = 'rate-limiting-test-report.json';

            if (fs.existsSync(path)) {
              const report = JSON.parse(fs.readFileSync(path, 'utf8'));
              const comment = '## Rate Limiting Test Results\n\n' +
                'Summary:\n' +
                '- Total Tests: ' + report.summary.total + '\n' +
                '- Passed: ' + report.summary.passed + ' ✅\n' +
                '- Failed: ' + report.summary.failed + ' ❌\n' +
                '- Success Rate: ' + report.summary.success_rate + '\n\n' +
                'Test Details:\n' +
                report.tests.map(test => (test.passed ? '✅' : '❌') + ' ' + test.name + (test.details ? ': ' + test.details : '')).join('\n') + '\n\n' +
                'Generated at: ' + report.timestamp;

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } else {
              console.log('Test report not found at', path);
            }
