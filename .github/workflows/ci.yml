name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 24

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Lint code (does not fail the workflow)
      - name: Lint code
        run: |
          npm run lint || echo "⚠️ ESLint errors/warnings found (workflow continues)"

      # Step 5: Run tests
      - name: Run tests
        run: npm test

      # Step 6: Run rate limiting tests
      - name: Run rate limiting tests
        run: npm run test:rate-limiting
        continue-on-error: false

      # Step 7: Upload test reports
      - name: Upload test reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-reports
          path: |
            rate-limiting-test-report.json
            rate-limiting-test-report.txt
          retention-days: 30

      # Step 8: Comment test results on PR
      - name: Comment test results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            try {
              const report = JSON.parse(fs.readFileSync('rate-limiting-test-report.json', 'utf8'));
              const comment = `## 🧪 Rate Limiting Test Results\n\n` +
                `**Summary:**\n` +
                `- Total Tests: ${report.summary.total}\n` +
                `- Passed: ${report.summary.passed} ✅\n` +
                `- Failed: ${report.summary.failed} ❌\n` +
                `- Success Rate: ${report.summary.success_rate}\n\n` +
                `**Test Details:**\n` +
                `${report.tests.map(test => `${test.passed ? '✅' : '❌'} ${test.name}${test.details ? ': ' + test.details : ''}`).join('\n')}\n\n` +
                `*Generated at: ${report.timestamp}*`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.log('Could not read test report:', error.message);
            }
